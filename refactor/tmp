--
Interp(((fn (x) x) 1))
Interp(x) where x -> 1

Interp((f 1)) where f -> (x), x
Interp(f.body) where f.body -> x, x -> 1
--
def interp(expr) :: {Expr|Symbol} -> {Value}:
    expr :: {Expr|Symbol}
    if expr is Symbol:
        ret env.get(expr)
    else:
        expr :: Expr
        // Expr -> fun, args